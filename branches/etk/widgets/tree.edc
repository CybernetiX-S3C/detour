

#define TEXT_STYLE_HEADER "DEFAULT='font=Vera font_size=10 align=left color=#000000 wrap=word style=shadow shadow_color=#ffffff80' \
center='+ align=center' \
/center='- \n' \
right='+ align=right' \
/right='- \\n' \
h1='+ font_size=20' \
b='+font=Vera-Bold' \
i='+font=Vera-Italic' \
glow='+ style=glow color=#fff glow2_color=#fe87 glow_color=#fa14' \
link='+ underline=on underline_color=#0000aa color=#0000aa' \
red='+ color=#ff0000' \
br='\n' \
tab='\t'"


group {
	name: "tree/grid";
	data {
		item: "inset" "4 3 6 6";
		item: "separator_color" "204 204 204 140";
		item: "row_height" "24";
		item: "cell_margins" "4 4 2 2";
		item: "expander_size" "18";
	}
	
	parts {
		part {
			name: "border";
			description {
				state: "default" 0.0;
				
				rel1 { relative: 0.0 0.0; offset: 2 2; }
				rel2 { relative: 1.0 1.0; offset: -3 -2; }
				
				image {
					normal: "tree.png";
					border: 6 6 6 6;
					middle: 0;
				}
				fill.smooth: 0;
			}
		}
		part {
			name: "middle";
			type: RECT;
			description {
				state: "default" 0.0;

				rel1 { relative: 0.0 0.0; offset: 6 6; }
				rel2 { relative: 1.0 1.0; offset: -6 -6; }
				
				color: 255 255 255 255;
			}
		}
		FOCUS_GLOW(0.0, 0.0, 0, 1, "border", 1.0, 1.0, 0, -2, "border")
		DRAG_GLOW(0.0, 0.0, -1, -1, "border", 1.0, 1.0, 0, 0, "border"); 
	}
	
	programs {
		program {
			name: "tree_focus";
			signal: "focus";
			source: "";
			FOCUS_GLOW_ACTION
		}
		program {
			name: "tree_unfocus";
			signal: "unfocus";
			source: "";
			UNFOCUS_GLOW_ACTION
		}
		program {
			name: "drag_enter";
			signal: "drag_enter";
			source: "";
			DRAG_ENTER_ACTION
		}
		program {
			name: "drag_leave";
			signal: "drag_leave";
			source: "";
			DRAG_LEAVE_ACTION
		}
		program {
			name: "drag_drop";
			signal: "drag_drop";
			source: "";
			DRAG_LEAVE_ACTION
		}
	}
}

group {
	name: "tree/row";
	
	parts {
		part {
			name: "row";
			type: RECT;
			description {
				state: "odd" 0.0;

				rel1 { relative: 0.0 0.0; offset: 0 0; }
				rel2 { relative: 1.0 1.0; offset: -1 -1; }
			
				color: 244 244 244 255;
			}
			description {
				state: "even" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 250;
			}
		}
	
		part {
			name: "select_rect";	 
		 	mouse_events: 0;
			description {
				state: "default" 0.0;
				visible: 0;
				
				rel1 { relative: 0.0 0.0; offset: -1 0; }
				rel2 { relative: 1.0 1.0; offset: -1 -1; }
				
				image {
					normal: "tree_row_selected.png";
					border: 3 3 11 3;
				}
			}
			description {
				state: "selected" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
	}
	
	programs {
		program {
			name: "even";
			signal: "even";
			source: "";
			action: STATE_SET "even" 0.0;
			target: "row";
		}
		program {
			name: "odd";
			signal: "odd";
			source: "";
			action: STATE_SET "default" 0.0;
			target: "row";
		}
		program {
			name: "selected";
			signal: "selected";
			source: "";
			action: STATE_SET "selected" 0.0;
			target: "select_rect";
		}
		program {
			name: "unselected";
			signal: "unselected";
			source: "";
			action: STATE_SET "default" 0.0;
			target: "select_rect";
		}
	}
}
group {
	name: "tree/expander";
	parts {
		part {
			name: "expander_arrow";
			description {
				state: "default" 0.0;
				
				rel1 { relative: 0.0 0.0; offset: 0 0; }
				rel2 { relative: 1.0 1.0; offset: -1 -1; }
				
				image {
					normal: "tree_expander_fold.png";
				}
				fill.smooth: 0;
			}
			description {
				state: "expand" 0.0;
				inherit: "default" 0.0;
				
				image {
					normal: "tree_expander_unfold.png";
				}
				fill.smooth: 0;
			}
		}
	}
	programs {
		program {
			name: "collapse";
			signal: "collapse";
			source: "";
			action: STATE_SET "default" 0.0;
			target: "expander_arrow";
		}
		program {
			name: "expand";
			signal: "expand";
			source: "";
			action: STATE_SET "expand" 0.0;
			target: "expander_arrow";
		}
	}
}
group {
	name: "tree/header";
	min: 20 26;
	
	data {
		item: "inset" "8 8 6 5";
	    item: "text_style" TEXT_STYLE_HEADER;
	}
	
	parts {
		part {
			name: "tree_header";
			description {
				state: "default" 0.0;
				
				rel1 { relative: 0.0 0.0; offset: 2 3; }
				rel2 { relative: 1.0 1.0; offset: -1 -1; }
				color: 255 255 255 255;
				image {
               		normal: "toolbar_button.png";
               		border: 7 7 6 6;
            	}
				fill.smooth: 0;
			}
			description {
				state: "active" 0.0;
				inherit: "default" 0.0;
			  	image {
               		normal: "toolbar_button_active.png";
               		border: 7 7 6 6;
                }
                color: 255 255 255 255;
				fill.smooth: 0;
			}
		}
	}
	
	programs {
		program {
			name: "header_enter";
			signal: "enter";
			source: "";
			action: STATE_SET "active" 0.0;
			target: "tree_header";
		}
		program {
			name: "header_leaver";
			signal: "leave";
			source: "";
			action: STATE_SET "default" 0.0;
			target: "tree_header";
		}
	}
}

group {
	name: "tree/checkbox";
	min: 20 20;
	parts {
		part {
			name: "checkbox";
			description {
				state: "default" 0.0;
				
				rel1 { relative: 0.0 0.5; offset: 2 -8; }
				rel2 { relative: 0.0 0.5; offset: 17 7; }
				
				image {
					normal: "checkbox_off.png";
				}
				fill.smooth: 0;
			}
			description {
				state: "on" 0.0;
				inherit: "default" 0.0;
				
				image {
					normal: "checkbox_on.png";
				}
			}
		}
		part {
			name: "checkbox_down";
			description {
				state: "default" 0.0;
				visible: 0;
				
				rel1 { relative: 0.0 0.5; offset: 2 -8; }
				rel2 { relative: 0.0 0.5; offset: 17 7; }
				
				image {
					normal: "checkbox_down.png";
				}
				fill.smooth: 0;
			}
			description {
				state: "down" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
	}
	programs {
		program {
			name: "tree_checkbox_activate";
			signal: "activate";
			source: "";
			action: STATE_SET "on" 0.0;
			target: "checkbox";
		}
		program {
			name: "tree_checkbox_desactivate";
			signal: "deactivate";
			source: "";
			action: STATE_SET "default" 0.0;
			target: "checkbox";
		}
		program {
			name: "tree_checkbox_down";
			signal: "mouse,down,1*";
			source: "checkbox";
			action: STATE_SET "down" 0.0;
			target: "checkbox_down";
		}
		program {
			name: "tree_checkbox_up";
			signal: "mouse,up,1";
			source: "checkbox";
			action: STATE_SET "default" 0.0;
			target: "checkbox_down";
		}
	}
}

